도메인 3: 기술 (33%)
3.1 AWS 클라우드 내 배치 및 운영 방법 정의
3.2 AWS 글로벌 인프라 정의
3.3 핵심 AWS 서비스 파악
3.4 기술 지원 리소스 파악

================
================

글로벌 인프라
모든 애플리케이션에 적합한 가장 안전하고 광범위하며 안정적인 글로벌 클라우드 인프라

클릭 한 번으로 전 세계 모든 위치에 애플리케이션 워크로드를 배포하거나
한 자릿수 밀리초의 지연 시간으로 최종 사용자에게 더 가까운 위치에 특정 애플리케이션을 배포해야 하는 경우
언제 어디서나 필요할 때 AWS의 글로벌 인프라를 사용할 수 있습니다.

AWS에는 리전이라는 개념이 있습니다. AWS가 전 세계에서 데이터 센터를 클러스터링하는 물리적 위치를 리전이라고 합니다.

각 AWS 리전은 지리적 영역 내에서 격리되고 물리적으로 분리된 여러 개의 AZ로 구성됩니다.
각 AZ는 독립된 전원, 냉각 및 물리적 보안을 갖추고 있으며 지연 시간이 매우 짧은 중복 네트워크를 통해 연결됩니다.
고가용성을 중시하는 AWS 고객은 여러 AZ에서 실행되도록 애플리케이션을 설계하여 내결함성을 한층 더 강화할 수 있습니다.

AWS 인프라 리전은 가장 높은 수준의 보안, 규정 준수 및 데이터 보호를 충족합니다.

AZ(가용 영역)는 AWS 리전의 중복 전력, 네트워킹 및 연결이 제공되는 하나 이상의 개별 데이터 센터로 구성됩니다.
이러한 AZ를 사용하면 단일 데이터 센터를 사용하는 것보다 더 높은 가용성, 내결함성 및 확장성을 갖춘
프로덕션 애플리케이션과 데이터베이스를 운영할 수 있습니다.
AWS 리전의 모든 AZ는 높은 대역폭, 지연 시간이 짧은 네트워킹, 완전한 중복성을 갖춘 전용 메트로 광 네트워크와 상호 연결되어 있어
AZ 간에 높은 처리량과 지연 시간이 짧은 네트워킹을 제공합니다.
AZ 간의 모든 트래픽은 암호화됩니다.
네트워크 성능은 AZ 간 동기 복제 기능을 충분히 수행할 수 있습니다.
AZ는 고가용성을 위한 애플리케이션 분할을 용이하게 합니다.


고가용성
다른 기술 인프라 공급자와 달리 각 AWS 리전은 여러 AZ를 보유하고 있습니다.
AWS는 2006년부터 선도적인 클라우드 인프라 기술 플랫폼을 운영하면서,
애플리케이션의 가용성과 성능을 중요하게 생각하는 고객은 내결함성과 짧은 지연 시간을 구현하기 위해
같은 리전 내의 여러 AZ에 이러한 애플리케이션을 배포하길 원한다는 것을 알게 되었습니다.
AZ는 빠른 프라이빗 광섬유 네트워킹으로 서로 연결되어 있어
중단 없이 AZ 간에 자동으로 장애 조치가 이루어지는 애플리케이션을 손쉽게 설계할 수 있게 해줍니다.
AWS 컨트롤 플레인(API 포함) 및 AWS Management Console은 AWS 리전에 분산되어 있으며,
각 리전 내에서 다중 AZ 아키텍처를 활용하여 복원성을 지원하고 지속적인 가용성을 보장합니다.
이를 통해 고객은 단일 데이터센터에서의 중요한 서비스 종속성을 피할 수 있게 되었습니다.
AWS는 고객이 중요한 서비스를 일시적으로 사용할 수 없는 상황을 피하면서 유지 관리 활동을 수행할 수 있습니다.

연속성 향상
AZ를 사용하여 같은 리전 내의 여러 데이터 센터에 애플리케이션과 데이터를 복제하는 것과 더불어,
AWS 리전 간에 데이터를 복제함으로써 중복성과 내결함성도 향상할 수 있습니다.
프라이빗 고속 네트워킹 및 퍼블릭 인터넷 연결 모두를 사용하여 비즈니스 연속성에 계층을 추가하거나
전 세계적으로 지연 시간이 짧은 액세스를 제공할 수 있습니다.




AWS 로컬 영역
지연 시간에 민감한 애플리케이션을 최종 사용자에게 더 가까운 위치에서 실행

AWS 로컬 영역은 AWS 컴퓨팅, 스토리지, 데이터베이스 및 기타 셀렉트 서비스를
AWS 리전이 없는 많은 인구, 산업 및 IT 센터에 더 가까운 위치에 배치하는 새로운 유형의 AWS 인프라 배포입니다.
AWS 로컬 영역을 사용하면 최종 사용자와 리소스의 로컬 애플리케이션에서 지연 시간에 민감한 부분을 특정 지역에서 쉽게 실행하여
미디어 및 엔터테인먼트 콘텐츠 작성, 실시간 게임, 저장소 시뮬레이션, 전자 설계 자동화 및 기계 학습과 같은
사용 사례의 지연 시간을 10밀리초 미만으로 단축할 수 있습니다.

로스앤젤레스 AWS 로컬 영역이 정식 출시되었으며 이후에 더 많은 로컬 영역이 공급될 예정입니다.

================

글로벌인프라 (Global Infrastructure)
Region, Avaliability Zone, Edge Location
- 리전
  : 2개 이상의 가용 영역을 호스팅하는 지리적 영역, AWS 서비스에 대한 구성 수준
  : 리소스를 배포할 때 리소스가 위치하는 리전을 선택, 여러 리전에 배포 가능
  : 리전은 서로 완전히 분리된 개체이다. 한 리전의 리소스는 다른 리전으로 자동 복제되지 않으며
    모든 서비스가 모든 리전에서 이용 가능한 것은 아니다. S3, EC2와 같이 모든 리전에서 이용 가능한 서비스도 있음
- 가용 영역
  : 특정 리전에 존재하는 데이터 센터들의 모음을 의미
  : 각 가용 영역은 물리적으로 서로 격리되어 있지만 빠르고 지연시간이 짧은 네트워크로 서로 연결되어 있음
  : 각 가용 영역은 물리적으로 구분된 독립적인 인프라 (논리적으로도 분리되어 있음)
  : 가용 영역을 격리함으로써 다른 영역의 장애로부터 보호되고 특정 리전에서 고가용성 및 데이터 중복성이 보장됨
    따라서 하나의 영역이 중단되더라도 다른 영역에서 요청을 처리할 수 있음
  : 때문에 여러 가용 영역에 데이터를 프로비저닝 하는 것을 모범사례로 추천하고 있음
- 엣지 로케이션
  : Amazon CloudFront라고 하는 콘텐츠 전송 네트워크(CDN)를 호스팅 함
  : 콘텐츠 요청이 자동으로 가장 가까운 엣지 로케이션으로 라우팅되므로 콘텐츠가 더욱 빨리 엔드유저에게 전송됨
  : 일반적으로 엣지 로케이션은 가용 영역의 리전과 마찬가지로 인구 밀도가 높은 지역에 위치한다.


================

Amazon Elastic Compute Cloud - EC2
- Compute : 제공되는 컴퓨팅 또는 서버 리소스를 의미
- Elastic : 애플리케이션의 현재 요구사항에 따라 해당 애플리케이션에 필요한 서버의 양을 자동으로 늘리거나 줄일 수 있다는 것을 의미
- 인스턴스는 종량 과금제가 적용 됨 (사용량에 따라 지불)
  실행한 인스터스에 대해 실행 시간 동안만 요금을 지불하는 방식
- 인스턴스 생성
  : AWS 콘솔 로그인
  : 리전 선택 (인스턴스를 호스팅할 리전 선택)
  : EC2 마법사 시작
  : AMI(Amazon Machine Image) 선택(SW) - 시작 후 인스턴스에 동반되는 소프트웨어를 의미
  : 인스턴스 유형(Instance Type) 선택(HW)
  : 네트워크 구성
  : 스토리지 구성
  : 보안(시큐리티) 구성
  : 키 페어 구성 (SSH를 통해 인스턴스에 연결할 때 사용)


Amazon Elastic Block Store-EBS (EC2 콘솔 메뉴에 있음)
- EC2 인스턴스의 스토리지 단위로 사용 가능
- 사용한 만큼만 요금을 지불 (언제라도 삭제하여 요금을 지불하지 않을 수 있다)
- HDD와 SSD 유형 중에서 선택
- EC2 인스턴스를 위한 사용자 지정 가능한 영구 블럭 스토리지
- 동일한 가용 영역에 복제됨
- 스냅샷을 사용하여 백업 (내구성 제공을 위한 특징)
- 쉽고 투명한 암호화 (추가 요금 없음)
  : 암호화는 EC2 에서 이루어짐, 따라서 EBS로 전송되는 데이터는 암호화 되어 전송됨
- 탄력적 볼륨
  : 볼륨을 늘리고 다른 유형으로 변경도 가능함
  : 인스턴스 중지 없이 즉시 이러한 크기 조정 작업을 수행할 수 있음
- EBS는 연결하려는 EC2와 동일한 AZ 에 생성해야 한다
- EBS 볼륨은 안정성과 가용성을 목표로 설계 되었음
  : 볼륨에 있는 데이터는 가용 영역에서 실행중인 여러 서버에 자동으로 복제 됨
  : 블록 수준 복제 때문에 안정적임
- EBS 볼륨은 연결하려는 인스턴스 호스팅되는 가용영역과 동일한 가용영역(Avaliability Zone)에 생성해야 한다.

* 태그가 중요한 이유는 AWS 리소스에 태그를 지정할 경우 태그 기준으로 비용을 분석할 수 있기 때문이다.
  즉, 태그 키 이름과 태그 값 데이터베이스 볼륨이 포함된 모든 볼륨에서 특정 시간 동안 얼마나 비용이 발생하는지 알 수 있다.

Amazon Simple Storage Service-S3
- 데이터를 저장하고 검색할 수 있는 간단한 API를 제공하는 완전 관리형 스토리지 서비스
  : 특정 서버에 저장하는 것이 아니기 때문에 사용자가 인프라를 직접 관리할 필요가 없다.
- 관리형 클라우드 스토리지 서비스
- 객체를 사실상 무제한으로 저장
- 언제든 어디서나 액세스
- 풍부한 보안 제어 기능
- 버킷은 특정 AWS 리전에 연결됨 -> 버킷에 데이터를 저장할 때 마다 해당 데이터는 선택한 리전의 여러 AWS 시설에 중복 저장된다
  2개의 AWS 시설에서 동시에 데이터가 손실되는 경우에도 데이터를 안정적으로 저장하도록 설계되어있음
- 사용한 양에 대해서만 비용이 청구 됨
- https://awsexamplebucket/s3-us-west-2.amamzonaws.com/docs/hello.txt
  : awsexamplebucket -> 버킷이름
  : s3-us-west-2.amamzonaws.com -> 리전별 엔드포인트
  : docs/hello.txt -> 객체 키
  : S3 버킷 이름은 전역적으로 고유하고 DNS를 준수해야 한다.
  : 객체 키는 URL에 안전한 문자를 사용해야 한다.
- 사용 사례
  : 애플리케이션에서 사용하는 데이터 저장, 정적 웹 호스팅, 백업 및 재해 복구, 빅 데이터를 위한 스테이징 영역.. 등
- 뛰어난 내구성을 가지고 있음
- 가용성 및 재해 복구 기능을 한층 강화하기 위해 한 리전의 S3 버킷에 들어 있는 데이터를
  다른 S3 리전으로 자동 복제할 수 있는 교차 리전 복제를 지원하도록 구성 가능

Amazon Virtual Private Cloud
- AWS 클라우드는 종량제 온디맨드 컴퓨팅뿐 아니라 관리형 서비스도 제공하며 모두 웹에서 엑세스 가능
  이러한 컴퓨팅 리소스 및 서비스는 익숙한 네트워크 구조로 구현된 정상 IP 프로토콜을 통해 엑세스 가능해야 함
- Amazon VPC는 네트워킹 요구 사항을 충족하는 AWS 네트워킹 서비스임
- AWS 클라우드의 프라이빗 가상 네트워크 생성 가능
  : 온프레미스 네트워킹과 동일한 개념 사용
- 네트워크 구성을 완벽하게 제어할 수 있도록 허용
  : VPC 내부의 리소스를 격리 및 노출할 수 있는 기능
- 여러 계층의 보안 제어 기능을 제공
  : 특정 인터넷 및 내부 트래픽을 허용 및 거부할 수 있는 기능
- 다른 AWS 서비스를 VPC에 배포
  : 네트워크에 내장된 서비스 고유의 보안
- AWS VPC는 AWS 기초서비스이며 다양한 AWS 서비스와 통합됨
- 하나의 리전에 설정되어 여러 개의 AZ에 걸쳐 구성될 수 있다.
- VPC는 IP 주소 공간을 정의한 다음 서브넷으로 나눈다.
  서브넷은 가용 영역내에 배포되어 VPC가 여러 가용 영역으로 확장된다.
- 기본적으로 VPC 내 모든 서브넷은 서로 통신할 수 있음
- VPC는 리전 기반임

AWS Security Groups-보안 그룹 (EC2메뉴에 있음)
- 보안 그룹
  : 기본 제공되는 가상서버를 위한 내장된 방화벽의 역할 수행
  : 규칙을 통해 인스턴스에 대한 엑세스 제어
- 보안 그룹은 어떤 트래픽을 허용할지 거부할지 제어할 수 있음

================

Application Load Balancer (EC2 콘솔에 속함)
- Elastic Load Balancer
  1. Classic Load Balancer
  2. Application Load Balancer
- Classic Load Balancer 보다 더 많은 프로토콜이 지원되며, CloudWatch 지표, 엑세스 로그, 상태 확인이 더 지원됨
- 추가된 기능 : 경로 및 호스트 기반 라우팅, 
- 들어오는 요청을 포트별로 구분하여 특정 EC2 인스턴스에 보내도록 라우팅 설정이 가능
- Application Load Balancer 를 사용하려면 최소한 2개의 가용 영역을 선택해야 함
- target group

Auto Scaling
- 어플리케이션의 로드를 처리 할 수 있는 적절한 EC2 인스턴스 용량 조절
- CloudWatch를 이용하여 워크로드 실적을 모니터링 하는 것이 중요
- Auto Scaling은 지정한 조건에 따라 EC2 인스턴스를 추가하거나 제거할 수 있음
- Auto Scaling은 성능 요구사항이 변동하는 환경에서 특히 강력함 -> 비용을 최적화 할 수 있음
- 확장성(필요한 만큼 늘릴 수 있다) / 자동화(워크로드에 따라 자동으로 변경할 수 있다)
- 스케일 아웃 : 더 많은 인스턴스를 추가하는 것
- 스케일 인 : 인스턴스를 종료하는 것
- Auto Scaling은 시작구성, Auto Scaling 그룹, Auto Scaling 정책 으로 구성되어 있음
- 시작구성(Launch Configuration) (무엇을 대상으로 하는가)
  Auto Scaling에 의해 EC2 인스턴스를 추가할 때 필요한 EC2의 설정에 대한 정의
  EC2 인스턴스를 콘솔에서 실행할 때 지정해야 하는 모든 사항을 포함
- Auto Scaling 그룹 (어디에서 동작할 것인가, 어떤 범위에서 동작할 것인가)
  VPC, 로드밸런서, 최소 인스턴스, 최대 인스턴스 등
- Auto Scaling 정책 (언제 동작할 것인가)
  인스턴스를 추가하거나 종료하는 조건을 지정
  예약(특정 일자등), 온디맨드, 확장정책, 축소정책
- Auto Scaling의 일반적인 구성은 EC2 혹은 Elastic Load Balancer의 성능 정보를 기반으로 CloudWatch 경보를 설정하여
  설정한 임계값을 넘는 경우 CloudWatch 에서 인스턴스 확장/축소하는 이벤트를 트리거

Amazon Route 53
- 도메인 등록
- 글로별 고가용성 DNS 서비스
- 퍼블릭 및 프라이빗 DNS 이름
- 다중 라우팅 알고리즘 제공
- IPv4, IPv6 모두 지원
- 다른 AWS 클라우드 서비스와 통합
- Route 53을 사용하려면
  가장 먼저 호스팅 영역(Hosted Zone)을 생성 -> DNS 데이터가 유지되는 곳
- 단순 라우팅 뿐 아니라, 장애조치, 가중치기반 라운드 로빈, 지리적 위치, 지연시간 기반 라우팅, 다중 응답등 다양한 기능이 제공 됨

Amazon Relational Database Services (RDS)
- 클라우드에서 관계형 데이터베이스를 설정하고 운영하는 관리형 서비스
- 애플리케이션에만 집중할 수 있도록
  필요한 성능, 고가용성, 보안 및 호환성을 제공
- 데이터 및 어플리케이션 최적화에 집중할 수 있음
- 다중 AZ 배포로 고가용성 데이터베이스 인스턴스를 구성할 수 있음
  -> 동기식 복제 (트랜잭션이 대기 사본으로 동시에 복제됨)
  -> 장애 발생시 자동으로 체인지
- 동일 AZ 내에서 읽기 전용 복제본 사용하는 경우 소스 데이터베이스의 부하를 줄일 수 있음
  -> 읽기 중심의 데이터베이스 워크로드에 적합
  -> 비동기식 복제
  -> 장애 발생시 수동으로 체인지
  -> 읽기전용 복제본을 마스터와 다른 리전에 생성도 가능하며 이 경우 재해 복구 요구 사항을 충족학거나
     사용자와 가까운 읽기전용 복제본으로 읽기를 보내 지연 시간을 줄일 수 있음
- 데이터베이스 컴퓨팅 및 스토리지 리소스를 다운타임 없이 확장 가능

AWS Lambda
- AWS는 이벤트 중심의 서버리스 컴퓨팅 서비스
- AWS Lambda는 서버를 프로비저닝 하거나 관리하지 않고도 코드를 실행할 수 있도록 지원하는 컴퓨팅 서비스
  AWS Lambda는 필요한 경우에만 코드를 실행하고 초당 수천개의 요청으로 자동으로 확장됨
- 장점
  사용하는 컴퓨팅에 대해서만 비용 지불 -> 간헐적인 가변 워크로드에 적합함
  관리작업 전혀 없이 코드를 실행할 수 있음
- AWS Lambda는 이벤트 중심의 컴퓨팅에 사용할 수 있음

AWS Elastic Beanstalk
- 어플리케이션을 클라우드로 신속하게 전환하려면 어떻게 해야 하나?
  어떻게 하면 신속하게 전체 환경을 준비 할 수 있을까?
- AWS Elastic Beanstalk은 Platform as a Service
- 애플리케이션을 빠르게 배포할 수 있음
- 관리의 복잡성을 줄여줌
- 작성한 코드를 클라우드에서 실행할 수 있게 해주는 서비스
  (EC2, VPC..등의 설정을 개별로 해줄 필요 없음)

Amazon Simple Notification Service (SNS)
- 사용자 or microservice or application 등.. 에게 nofi
- 분리된 시스템(microservice) 간에 메세지를 전송하는 시스템
- 유연한 완전관리형 게시/구독 메시징 및 모바일 통신 서비스
- 구독중인 엔드포인트/클라이언트 별로 메시지 전달을 조정할 수 있음
- 안정적인 통신을 손쉽게 설정, 운영할 수 있음
- 마이크로서비스, 분산 시스템 및 서버리스 애플리케이션을 분리 및 확장 할 수 있음


Amazon CloudWatch
- AWS에서 실행하는 Amazon Web Service(AWS) 리소스와 애플리케이션을 실시간으로 모니터링하는 서비스
- 지표 수집 및 추적, 로그 파일 수집 및 모니터링
  -> 경보를 설정하여
  -> 알람을 보내거나, 다른 자동화된 조치를 취할 수 있음 (Auto Scaling 트리거, AWS Lambda 실행, EBS 볼륨 스냅샷 등)
- CloudWatch를 사용하면 시스템 전체의 리소스 사용률, 애플리케이션 성능 및 운영상태를 파악할 수 있음
- 구성요소 : 지표(Matrics), 경보, 이벤트, 로그, 대시보드
  몇몇 리소스(EC2, EBS, RDS등)은 무료 지표를 제공
  자체 애플리케이션 지표를 추가하려면 추가 비용 발생
- AWS management console 에서 모든 지표 확인 가능
- cron / rate 표현식을 이용하여 특정 시간에 자동으로 트리거되는 자동화 작업 예약 가능
- AWS CloudTrail 에서 로깅한 이벤트를 모니터링 할 수 있음
  CloudTrail 이벤트는 계정내에서 발생하는 모든 API 작업을 의미
- 대시보드에서는 다른 리전에 있는 리소스를 모아서 모니터링 할 수 있음

Amazon CloudFront
- CDN(Contetns Delivery Network)
- 규모를 확장하고 비용을 절감하며 애플리케이션 성능을 향상 할 수 있게 해주는 AWS 서비스
- 기본적으로 CloudFront를 사용하면 전 세계에 있는 여러 location(위치)를 이용하여
  콘텐츠를 전송하고, 사용자는 보다 짧은 지연시간으로 애플리케이션과 상호작용할 수 있음
- CloudFront를 사용하면 외부 데이터 전송시 낮은 요금 때문에 비용을 절감할 수 있음
- CloudFront는 고가용성을 유지하도록 해준다. 웹 서버 충돌과 같이 원본에서 문제가 발생하는 경우
  웹 서버를 중지해도 콘텐츠는 캐시에서 계속 제공이 가능

AWS CloudFormation
- AWS 리소스 프로비저닝 자동화를 위한 서비스
  : 완전 관리형 서비스, 스택에서 리소스를 생성, 업데이트, 삭제
- 애플리케이션을 구동하는 관련 리소스 그룹을 예상한대로 반복적으로 생성하는 작업을 자동화 및 간소화 하게 해준다.
  '예상한대로 반복해서' -> 키워드
- 워크로드에 대한 가상환경 구성(VPC설정, DB연결, EC2 생성등)을 자동화하고 복제한다.
- AWS CloudFormation는 템플릿 파일을 읽어서 템플릿에 나열된 리소스를 구성한다.
  이러한 프로세스의 결과물을 스택이라고 한다.
  스택 : 템플릿에 의해 생성된 리소스이며 배포 단위를 의미한다. 스택 생성후 수정된 템플릿을 실행하여 스텍을 업데이트 할 수 있다.
- CloudFormation을 사용하는 경우 동일한 템플릿을 사용하여 파라미터만 다르게 하여
  개발환경 / 프로덕션 환경을 구축할 수 있다.
- CloudFormation을 실행하는데 있어서 중요한 것은
  1. 템플릿 : 템플릿에 에러가 없어야 함
  2. 권한 : 템플릿을 실행하는 사람은 템플릿에서 참조하는 모든 서비스에 대한 권한이 있어야 한다.

================

주요 서비스

Amazon EC2
클라우드의 가상 서버

Amazon Elastic Compute Cloud(EC2)는 안전하고 크기 조정이 가능한 컴퓨팅 파워를 클라우드에서 제공하는 웹 서비스입니다.

종량 과금제
매달 말에 실제로 사용한 EC2 리소스에 대한 요금이 청구됩니다.
인스턴스 시간 또는 데이터 전송과 같은 실제로 소비한 리소스에 대해서만 비용을 지불합니다.

Amazon EC2 Auto Scaling을 사용하면 정의한 조건에 따라 Amazon EC2 용량을 자동으로 확장하거나 축소할 수 있습니다.
EC2 Auto Scaling은 사용량이 시간, 일 또는 주 단위로 바뀌는 애플리케이션에 특히 적합하고
EC2 Auto Scaling은 Amazon CloudWatch를 통해 활성화되며 Amazon CloudWatch 요금 외에 추가 비용이 발생하지 않습니다. 



온디맨드 - 실행하는 인스턴스에 따라 시간당 또는 초당 컴퓨팅 파워에 대한 비용을 지불
Savings Plans - 1년 또는 3년 기간의 일정 사용량 약정(시간당 요금을 기준으로 측정)
예약 인스턴스 - 예약 인스턴스는 온디맨드 인스턴스 요금과 비교하여 상당한 할인 혜택(최대 75%)을 제공
스팟 인스턴스(AWS 클라우드에서 미사용 EC2 용량을 활용) - 온디맨드 요금보다 최대 90% 할인된 가격으로
                                                      예비 Amazon EC2 컴퓨팅 용량을 요청할 수 있습니다
전용 호스팅(고객 전용 물리적 서버에 EC2 인스턴스 용량을 제공) - 





Amazon Simple Storage Service(S3)
클라우드에서의 확장 가능한 스토리지

Amazon Simple Storage Service(Amazon S3)는 업계 최고의 확장성과 데이터 가용성 및 보안과 성능을 제공하는 객체 스토리지 서비스입니다.

데이터는 “버킷”이라는 리소스에 객체로 저장되며, 한 객체의 크기는 최대 5테라바이트까지 가능





Amazon Aurora
관리형의 고성능 관계형 데이터베이스

Amazon Aurora는 고성능 상용 데이터베이스의 성능과 가용성에 오픈 소스 데이터베이스의 간편성과 비용 효율성을 결합하였으며
클라우드를 위해 구축된 MySQL 및 PostgreSQL 호환 관계형 데이터베이스입니다






Amazon DynamoDB
관리형 NoSQL 데이터베이스

어떤 규모에서든 빠르고 유연한 NoSQL 데이터베이스 서비스
Amazon DynamoDB는 어떤 규모에서도 10밀리초 미만의 성능을 제공하는 키-값 및 문서 데이터베이스입니다
DynamoDB는 어떤 규모에서도 일관되게 10밀리초 미만의 응답 시간을 제공하여 세계에서 가장 큰 규모의 몇몇 애플리케이션을 지원합니다.

DynamoDB는 선택한 옵션 기능과 함께 DynamoDB 테이블에서 데이터 읽기, 쓰기, 저장에 대해 부과됩니다.



Amazon RDS
MySQL, PostgreSQL, Oracle, SQL Server 및 MariaDB를 위한 관리형의 관계형 데이터베이스 서비스

Amazon Aurora, MySQL, MariaDB, Oracle, Microsoft SQL Server 및 PostgreSQL과 같은 6개의 익숙한 데이터베이스 엔진을 제공합니다. 
Amazon RDS에서 사용하는 온디맨드 인스턴스 또는 예약 인스턴스에 대한 요금을 지불


AWS Lambda
서버에 대한 걱정 없이 코드 실행

서버에 대한 걱정 없이 코드 실행. 사용한 컴퓨팅 시간에 대해서만 비용을 지불합니다.
AWS Lambda는 이벤트에 대한 응답으로 코드를 실행하고 자동으로 기본 컴퓨팅 리소스를 관리하는 서버리스 컴퓨팅 서비스입니다.

AWS Lambda를 사용하면 사용한 만큼만 비용을 지불합니다. 함수 요청 수와 기간, 코드를 실행하는 데 걸리는 시간에 따라 요금이 청구됩니다.
Lambda는 콘솔에서 테스트 호출을 포함하여 호출 또는 이벤트 알림에 대한 응답으로 실행을 시작할 때마다 1개 요청으로 계산합니다.
기간은 코드가 실행을 시작한 시간부터 반환되거나 종료될 때까지 계산되며, 최대 100밀리초 단위로 반올림됩니다*.
요금은 함수에 할당한 메모리 양에 따라 결정됩니다.


Amazon VPC
격리된 클라우드 리소스

고객이 정의하는 가상 네트워크에서 AWS 리소스를 구동할 수 있는 AWS 클라우드의 논리적으로 격리된 공간 프로비저닝
IP 주소 범위 선택, 서브넷 생성, 라우팅 테이블 및 네트워크 게이트웨이 구성 등 가상 네트워킹 환경을 완벽하게 제어할 수 있습니다.
VPC에서 IPv4와 IPv6를 모두 사용하여 리소스와 애플리케이션에 안전하고 쉽게 액세스할 수 있습니다




Amazon Lightsail
가상 프라이빗 서버 시작 및 관리

저렴하고 예측 가능한 요금으로 가상 서버, 스토리지, 데이터베이스 및 네트워킹을 사용하십시오.

올인원 클라우드 플랫폼으로 설계된 Lightsail은 모든 클라우드 요구 사항을 처리할 원스톱쇼핑 위치를 제공합니다.



Amazon SageMaker
기계 학습 모델을 대규모로 구축, 교육 및 배포

모든 개발자와 데이터 과학자를 위한 기계 학습
Amazon SageMaker는 모든 개발자 및 데이터 과학자가 기계 학습(ML) 모델을 빠르게 구축, 훈련 및 배포할 수 있도록 하는 완전 관리형 서비스입니다.
SageMaker는 기계 학습 프로세스의 각 단계에서 부담스러운 작업을 제거하여 고품질의 모델을 보다 쉽게 개발할 수 있도록 합니다.


=================

AWS CloudFormation
-> 빠르게 배포, 구축 (?)

Auto Scaling
Elastic Load Balancing
-> 애플리케이션의 규모를 수요에 맞춰 자동으로 확장하거나 축소 가능

==== AWS 인터페이스 소개 ====
AWS를 사용하는 3가지 방법
1. AWS Management Console
   : AWS 기능에 엑세스 할 수 있는 그래픽 인터페이스를 제공
2. CLI(명령줄 인터페이스)
   : 명령줄(command line)에서 AWS 서비스를 제어할 수 있음
3. SDK(소프트웨어 개발 키드)
   : 다양한 인기 프로그래밍 언어를 사용하여 AWS 엑세스 가능
이 세가지 모드를 모두 교대로 사용할 수 있음. 서로 배타적이지 않음

AWS Management Console
AWS 계정의 모든 측면에 대한 클라우드 관리를 지원
서비스를 찾아 열 수 있는 여러 가지 방법을 제공
바로가기, 핀아이콘, 리소스 그룹, 태그 편집기, 

CLI(명령줄 인터페이스)
AWS 서비스와 상호작용하기 위해 구축된 오픈 소스 도구

SDK(소프트웨어 개발 키드)
어플리케이션을 코드로 관리할 수 있음

위의 3가지 방법 모두 AWS API를 참조

